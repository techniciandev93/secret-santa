# Generated by Django 3.2.23 on 2023-12-15 13:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Идентификатор игры')),
                ('name', models.CharField(max_length=100, verbose_name='Название игры')),
                ('limit_cost', models.BooleanField(null=True, verbose_name='Ограничение стоимости подарка')),
                ('start_registration_period', models.DateField(verbose_name='Начало регистрации')),
                ('end_registration_period', models.DateField(verbose_name='Конец регистрации')),
                ('shipping_date', models.DateField(verbose_name='Дата доставки подарка')),
            ],
            options={
                'verbose_name': 'Игра',
                'verbose_name_plural': 'Игры',
            },
        ),
        migrations.CreateModel(
            name='Gamer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField(unique=True, verbose_name='ID игрока в телеграм')),
                ('gamer', models.CharField(max_length=100, verbose_name='Имя игрока')),
                ('email', models.EmailField(max_length=254, verbose_name='Электронная почта')),
                ('vishlist', models.CharField(max_length=200, verbose_name='Список пожеланий')),
                ('santa_letter', models.TextField(blank=True, default='', verbose_name='Письмо Санте')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Создатель игры')),
                ('game_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='telegram_bot.game', verbose_name='Название игры')),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
            },
        ),
        migrations.CreateModel(
            name='PriceRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Минимальная цена')),
                ('max_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Максимальная цена')),
            ],
            options={
                'verbose_name': 'Диапазон цены',
                'verbose_name_plural': 'Диапазон цен',
            },
        ),
        migrations.CreateModel(
            name='Sortition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sortitions', to='telegram_bot.game', verbose_name='Игра')),
                ('gifter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gifters', to='telegram_bot.gamer', verbose_name='Даритель')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='telegram_bot.gamer', verbose_name='Получатель')),
            ],
            options={
                'verbose_name': 'Жеребьевка',
                'verbose_name_plural': 'Жеребьевки',
            },
        ),
        migrations.AddField(
            model_name='game',
            name='price_ranges',
            field=models.ManyToManyField(to='telegram_bot.PriceRange', verbose_name='Диапазон цены'),
        ),
    ]
